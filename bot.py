import logging
import subprocess
import glob
import os
import time

from datetime import datetime
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ChatActions


API_TOKEN = "YOUR TOKEN HERE"
FFMPEG_PATH = "/home/david/telegram_bot/ffmpeg"
DOWNLOAD_PATH = "/home/david/telegram_bot/podcast/"
BAD_KEYWORDS = ["spotify", "ivoox"]
LOG_PATH = "/home/david/telegram_bot/log.txt"

# Configure logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=["start", "help"])
async def send_welcome(message: types.Message):
    await message.reply(
        "‚ñ∂Ô∏è –í—Å—Ç–∞–≤–ª—è–µ–º –ª–∏–Ω–∫\nüéß –ë–æ—Ç —Å–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ –∏ –≤—ã—Å—ã–ª–∞–µ—Ç –∫–∞–∫ –∞—É–¥–∏–æ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º\n‚öôÔ∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–æ—á—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å–∫–∞–∑–∞—Ç—å —Å–ø–∞—Å–∏–±–æ —á–∞—à–µ—á–∫–æ–π –∫–æ—Ñ–µ ‚òï,‚û°Ô∏è https://paypal.me/dmgeo\n\n‚ñ∂Ô∏è Paste video link here\nüéß Bot will download video and extract audio with minimal size\n‚öôÔ∏è If you want to help to maintain this bot or just what to say thanks with a cup of coffee ‚òï,‚û°Ô∏è https://paypal.me/dmgeo"
    )


@dp.message_handler()
async def download(message: types.Message):

    audio_list = []

    # –ú–∞–ª–µ–Ω—å–∫–æ–µ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ. –í—Ä–µ–º—è/–õ–∏–Ω–∫/UserID
    time_now = datetime.today().strftime("%D %H:%M:%S")
    pasted_links_log = open(LOG_PATH, "a")
    pasted_links_log.write(
        f"[{time_now}] Link: {message.text}, UserID: {message.from_user.id} \n"
    )
    pasted_links_log.close()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–ª–æ—Ö–∏—Ö Url-–æ–≤ —É –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ–±–ª–µ–º—ã —Å yt-dlp. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    bad_keyword_flag = 0

    for badkeyword in BAD_KEYWORDS:
        for badurl in message.text.split("."):
            if badkeyword == badurl or len(message.text.split(".")) <= 1:
                bad_keyword_flag = 1
                break
    
    if bad_keyword_flag == 1:
        await message.answer(
            "‚ùå –õ–∏–Ω–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∏–ª–∏ —ç—Ç–æ –Ω–µ –ª–∏–Ω–∫, —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ \n ‚ùå Link is not supported or its not a link, download is not possible"
        )
    else:
        await message.answer("‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞—é \ ‚¨áÔ∏è Downloading")
        # –ó–∞–ø—É—Å–∫–∞–µ–º yt-dlp —Å–∫–∞—á–∏–≤–∞–µ–º –∞—É–¥–∏–æ –∏–∑ –≤–∏–¥–µ–æ
        popen = subprocess.Popen(
            [
                "yt-dlp",
                "-S",
                "+size,+br,+res,+fps",
                "-x",
                "--audio-format",
                "m4a",
                str(message.text),
                "--ffmpeg-location",
                FFMPEG_PATH,
                "-o",
                f"{DOWNLOAD_PATH}{message.from_user.id}/%(title)s.%(ext)s",
            ],
            stdout=subprocess.PIPE,
            universal_newlines=True,
        )

        # –ü–æ–ª—É—á–∞–µ–º –¥—ã–Ω–Ω—ã–µ –∏–∑ popen = subprocess.Popen , –ó–∞–±–∏—Ä–∞–µ–º –æ—Ç—Ç—É–¥–∞ –ø—Ä–æ—Ü–µ–Ω—Ç—ã —Å–∫–∞—á–∫–∏ –∏ –ø—Ä–µ–¥–µ–∞–µ–º –±–æ—Ç—É.
        download_eta = await bot.send_message(
            message.chat.id, "‚è≥ –ì–æ—Ç–æ–≤–æ \ ‚è≥ Done : 0%"
        )
        for line in popen.stdout:
            if "ETA" in line:
                down_percent = line.split()[1].replace("%", "")
                time.sleep(5)
                try:
                    await bot.edit_message_text(
                        chat_id=message.chat.id,
                        message_id=download_eta.message_id,
                        text=f"‚è≥ –ì–æ—Ç–æ–≤–æ \ ‚è≥ Done : {down_percent}%",
                    )
                except:
                    pass
                    
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ-–±—ã —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–ª 45 –ú–ë. –õ–∏–º–∏—Ç 50–ú–ë
        for podcast in glob.glob(f"{DOWNLOAD_PATH}{message.from_user.id}/*.m4a"):
            file_size = round(os.stat(podcast).st_size / (1024 * 1024))
            if file_size > 45:
                await message.answer(
                    f"üíæ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ : {file_size} MB \ üì¶ –§–∞–∏–ª –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ä–∞–∑–º–µ—Ä \ ‚úÇÔ∏è –û–±—Ä–µ–∑–∞—é –∞—É–¥–∏–æ—Ñ–∞–∏–ª –Ω–∞ —á–∞—Å—Ç–∏ \ üíæ File size : {file_size} MB \ üì¶ File is over size limit \ ‚úÇÔ∏è Cutting in to pieces"
                )
                # –†–µ–∂–∏–º —Ñ–∞–∏–ª –Ω–∞ —Ä–∞–∑–º–µ—Ä –≤ 45 –ú–ë.FFMPEG –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ. mkvmerge –≤ –ø–æ–º–æ—â—å.
                subprocess.run(
                    [
                        "mkvmerge",
                        "-o",
                        f'{DOWNLOAD_PATH}{message.from_user.id}/[%02d] {podcast.split("/")[6]}',
                        "--split",
                        "45M",
                        podcast,
                    ]
                )
                os.remove(podcast)
            else:
                pass
        
        await message.answer("‚¨ÜÔ∏è –í—ã—Å—ã–ª–∞—é –∞—É–¥–∏–æ—Ñ–∞–∏–ª—ã \ ‚¨ÜÔ∏è Sending Files")

        for podcast in glob.glob(f"{DOWNLOAD_PATH}{message.from_user.id}/*.m4a"):
            audio_list.append(podcast)
        audio_list.sort()

        for audio_file in audio_list:
            audio = open(audio_file, "rb")
            await bot.send_chat_action(message.from_user.id, ChatActions.UPLOAD_AUDIO)
            await bot.send_audio(message.chat.id, audio)
            audio.close()
            os.remove(audio_file)


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
